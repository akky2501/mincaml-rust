use std::fmt::Write;

use typing::Type;

#[derive(Debug, Eq, PartialEq, Clone, Hash, Ord)]
pub struct Id(pub String);

#[derive(Debug, Eq, PartialEq, Clone, Hash, Ord)]
pub struct Label(pub String);

#[derive(Debug)]
pub struct VarGenerater{
    next_var: usize
}

impl VarGenerater {
    pub fn new() -> Self {
        VarGenerater{ next_var: 0 }
    }

    pub fn gen_id(&mut self) -> Id {
        let mut out = String::new();
        write!(&mut out, "@{}",self.gen_count()).unwrap();
        Id(out)
    }

    pub fn gen_type(&mut self) -> Type {        
        Type::Var(self.gen_count())
    }
    
    pub fn gen_count(&mut self) -> usize {
        let out = self.next_var;
        self.next_var += 1;
        out
    }

}
